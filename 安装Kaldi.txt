1）https://github.com/kaldi-asr/kaldi
2）下载https://github.com/kkm000/openfst
	打开openfst.sln编译
3）下载http://www.portaudio.com/download.html
	pa_stable_v190600_20161030.tgz
	打开build/msvc/portaudio.sln
	下面是去除asio的支持：
		删除解决方案中的asio文件夹
		找到portaudio.def 删除asio相关项
	然后编译
	
4）安装OpenBLAS
	http://sourceforge.net/projects/openblas/files/v0.2.14/OpenBLAS-v0.2.14-Win64-int32.zip
	解压
	下载https://sourceforge.net/projects/mingw/files/MinGW/Extension/pexports/pexports-0.47/的pexports-0.47-mingw32-bin.tar.xz
	解压后得到pexports.bin然后把这个exe拷贝到C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin
	把C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin添加到环境变量中
	打开cmd 然后cd到XXX\OpenBLAS-v0.2.14-Win64-int32\bin中
		pexports libopenblas.dll -o > libopenblas.def
		lib /DEF:libopenblas.def /MACHINE:IX86 /OUT:libopenblas.lib
		lib /DEF:libopenblas.def /MACHINE:X64 /OUT:libopenblas64.lib
	添加D:\jhh\githubsrc\OpenBLAS\OpenBLAS-v0.2.14-Win64-int32\bin到环境变量
	然后测试一下：
		下面是测试代码：
			见附录1
		包含目录：D:\jhh\githubsrc\OpenBLAS\OpenBLAS-v0.2.14-Win64-int32\include
		库目录：D:\jhh\githubsrc\OpenBLAS\OpenBLAS-v0.2.14-Win64-int32\bin
		附加依赖项：libopenblas64.lib
		
5）安装cuda（有的跳过）
	https://developer.nvidia.com/cuda-downloads?target_os=Windows&target_arch=x86_64&target_version=10&target_type=exenetwork
	双击cuda_10.2.89_win10_network.exe安装
	环境变量添加：
		C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\libnvvp;
		C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\bin;
	然后VS新建项目CUDA 10.2 Runtime运行观察是否成功
6）	安装 https://www.activestate.com/products/perl
7） 把 variables.props.dev复制一遍更名为 variables.props
	把 kaldiwin_openblas.props复制一遍更名为 kaldiwin.props
	打开 variables.props修改各个路径。例子见附录2.
	打开 openfstwin_release.props修改路径
		尤其是AdditionalDependencies里的fst.lib改成libfst.lib
8） 无cuda版编译
	CMD里执行 perl generate_solution.pl --vsver vs2017 --enable-openblas
	然后打开\kaldiwin_vs2017_OPENBLAS\kaldiwin_vs2017.sln
	切到release x64然后编译
	结果会有19个失败都是和cuda相关。



perl generate_solution.pl --vsver vs2017 --enable-cuda --enable-openblas



附录1：
extern "C" {
#include <cblas.h>
}
#include <iostream>

int main() {
	float a[1] = { 2 };
	float b[1] = { 3 };
	float c[1] = { 0 };
	cblas_sgemm(CblasRowMajor,
		CblasNoTrans, CblasNoTrans,
		1, 1, 1,
		1,
		a, 1,
		b, 1,
		0,
		c, 1);
	std::cout << *c << std::endl;
	system("pause");
	return 0;
}


附录2：
	<MKLDIR>C:\Program Files (x86)\IntelSWTools\compilers_and_libraries\windows\mkl\</MKLDIR>
    <OPENBLASDIR>D:\jhh\githubsrc\OpenBLAS\OpenBLAS-v0.2.14-Win64-int32</OPENBLASDIR>
    <OPENFST>D:\jhh\githubsrc\openfst-winport\</OPENFST>
    <OPENFSTLIB>D:\jhh\githubsrc\openfst-winport\build_output</OPENFSTLIB>
    <CUBDIR>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust\system\cuda\detail</CUBDIR>
    <PORTAUDIO>D:\jhh\githubsrc\portaudio</PORTAUDIO>
    <PORTAUDIOLIB>D:\jhh\githubsrc\portaudio\build\msvc\x64\Release</PORTAUDIOLIB>
    <NVTOOLSDIR>C:\Program FIles\NVIDIA Corporation\NvToolsExt</NVTOOLSDIR>